@prefix : <http://acme_services.org/express_mail#> .

@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix gr: <http://purl.org/goodrelations/v1#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix gn: <http://www.geonames.org/ontology#> .
@prefix lss-usdl: <http://w3id.org/lss-usdl/v2#> .


# Service System

:ExpressMailDelivery a lss-usdl:ServiceSystem;
  rdfs:label "Express Mail Delivery";
  rdfs:comment "A service system for delivering mail from a sender to a receiver.";

  lss-usdl:hasInteraction
  	:CustomerCalls ,
    :CustomerOrderIsRegistered ,
    :DispatchDriver ,
    :DriverPicksUpPackages ,
    :CustomerDeliversPackages ,
    :AirportReceivesAndLoads ,
    :FlyToDestination ,
    :UnloadAndLoadOnTruck ,
    :DriverDeliversPackages ,
    :AnotherCustomerReceivesPackage ;

  lss-usdl:hasControlFlow
   	:ControlFlow_Call_Order ,
	:ControlFlow_Order_Dispatch , 
	:ControlFlow_Dispatch_Picks , 
 	:ControlFlow_Picks_Airport ,
 	:ControlFlow_Airport_FlyS ,
 	:ControlFlow_FlyS_Sort ,
 	:ControlFlow_Sort_LoadA ,
 	:ControlFlow_LoadA_FlyD ,
 	:ControlFlow_FlyD_Unload ,
 	:ControlFlow_Unload_LoadT ,
 	:ControlFlow_LoadT_Deliver ,
 	:ControlFlow_Deliver_Receives .


	# -----------------------------
	# Flow of interactions
	# -----------------------------

	:ControlFlow_Call_Order a lss-usdl:ControlFlow ;
		rdfs:label "Customer Calls to Consumer service order" ;
		lss-usdl:hasSource :CustomerCalls ;
		lss-usdl:hasTarget :CustomerOrderIsRegistered ;
		lss-usdl:hasCondition "true"@en .

	:ControlFlow_Order_Dispatch a lss-usdl:ControlFlow ;
		rdfs:label "Consumer service order to dispatch driver" ;
		lss-usdl:hasSource :CustomerOrderIsRegistered ;
		lss-usdl:hasTarget :DispatchDriver ;
		lss-usdl:hasCondition "true"@en .

	:ControlFlow_Dispatch_Picks a lss-usdl:ControlFlow ;
		rdfs:label "Dispatch driver to Driver picks up package" ;
		lss-usdl:hasSource :DispatchDriver ;
		lss-usdl:hasTarget :DriverPicksUpPackages ;
		lss-usdl:hasCondition "true"@en .

	:ControlFlow_Picks_Airport a lss-usdl:ControlFlow ;
		rdfs:label "Categorization to SR" ;
		lss-usdl:hasSource :DriverPicksUpPackages ;
		lss-usdl:hasTarget :AirportReceivesAndLoads ;
		lss-usdl:hasCondition "true"@en .

	:ControlFlow_Airport_FlyS a lss-usdl:ControlFlow ;
		rdfs:label "Airport receives and load to Fly to sort center" ;
		lss-usdl:hasSource :AirportReceivesAndLoads ;
		lss-usdl:hasTarget :FlyToSortCenter ;
		lss-usdl:hasCondition "true"@en .

	:ControlFlow_FlyS_Sort a lss-usdl:ControlFlow ;
		rdfs:label "Fly to sort center to Sort packages" ;
		lss-usdl:hasSource :FlyToSortCenter ;
		lss-usdl:hasTarget :SortPackages ;
		lss-usdl:hasCondition "true"@en .

	:ControlFlow_Sort_LoadA a lss-usdl:ControlFlow ;
		rdfs:label "Sort packages to Load airplane" ;
		lss-usdl:hasSource :SortPackages ;
		lss-usdl:hasTarget :LoadAirplane ;
		lss-usdl:hasCondition "true"@en .

	:ControlFlow_LoadA_FlyD a lss-usdl:ControlFlow ;
		rdfs:label "Load airplane to Fly to destination" ;
		lss-usdl:hasSource :LoadAirplane ;
		lss-usdl:hasTarget :FlyToDestinationTime ;
		lss-usdl:hasCondition "true"@en .	
		
	:ControlFlow_FlyD_Unload a lss-usdl:ControlFlow ;
		rdfs:label "Fly to destination to Unload and sort" ;
		lss-usdl:hasSource :FlyToDestinationTime ;
		lss-usdl:hasTarget :UnloadAndSort ;
		lss-usdl:hasCondition "true"@en .

	:ControlFlow_Unload_LoadT a lss-usdl:ControlFlow ;
		rdfs:label "Unload and sort to Load on truck" ;
		lss-usdl:hasSource :UnloadAndSort ;
		lss-usdl:hasTarget :LoadOnTruck ;
		lss-usdl:hasCondition "true"@en .

	:ControlFlow_LoadT_Deliver a lss-usdl:ControlFlow ;
		rdfs:label "Load on truck to deliver package" ;
		lss-usdl:hasSource :LoadOnTruck ;
		lss-usdl:hasTarget :DriverDeliversPackages ;
		lss-usdl:hasCondition "true"@en .

	:ControlFlow_Deliver_Receives a lss-usdl:ControlFlow ;
		rdfs:label "Delivers package to Receives package" ;
		lss-usdl:hasSource :DriverDeliversPackages ;
		lss-usdl:hasTarget :AnotherCustomerReceivesPackage ;
		lss-usdl:hasCondition "true"@en .



# Business Entities

:ExpressMailCompany a gr:BusinessEntity;
  foaf:name "Express Mail Company".

# Roles

:Sender a lss-usdl:Role;
	rdfs:label "Sender";
	rdfs:comment "Customer who intends to send a mail to somebody else".
	
:Receiver a lss-usdl:Role;
	rdfs:label "Receiver";
	rdfs:comment "Customer who receives a mail using this service".

:CallCenterStaff a lss-usdl:Role;
	rdfs:label "Call-center staff";
	rdfs:comment "Staff in the call-center that accepts new delivery requests and dispatches drivers";
  lss-usdl:belongsToBusinessEntity :ExpressMailCompany.

:Driver a lss-usdl:Role;
	rdfs:label "Driver";
	rdfs:comment "Vehicle driver that transports mail from sender to receiver";
  lss-usdl:belongsToBusinessEntity :ExpressMailCompany.


# Goals

:SendMail a lss-usdl:Goal;
	rdfs:label "Send mail";
	rdfs:comment "Customer wants to send express mail to a specific destiny".

:ReceiveMail a lss-usdl:Goal;
	rdfs:label "Receive mail";
	rdfs:comment "Customer wants to receive the intended express mail".


# Locations

:SenderRegion a lss-usdl:Location;
  rdfs:label "Sender region".

:ReceiverRegion a lss-usdl:Location;
  rdfs:label "Receiver region".

:SenderHome a lss-usdl:Location;
	rdfs:label "Sender home";
  lss-usdl:isLocatedIn :SenderRegion.

:ReceiverHome a lss-usdl:Location;
	rdfs:label "Receiver home";
  lss-usdl:isLocatedIn :ReceiverRegion.

:CallCenter a lss-usdl:Location;
	rdfs:label "Call-center";
  lss-usdl:isLocationFrom <http://sws.geonames.org/8010483/>.

:SourceAirport a lss-usdl:Location;
	rdfs:label "Source airport";
  lss-usdl:isLocatedIn :SenderRegion.

:DestinyAirport a lss-usdl:Location;
	rdfs:label "Destiny airport";
  lss-usdl:isLocatedIn :ReceiverRegion.


# Resources

:Mail a lss-usdl:PhysicalResource;
	rdfs:label "Mail";
	rdfs:comment "The intended package the sender wants to deliver to receiver";
  lss-usdl:hasQuantitativeValue [
    a gr:QuantitativeValue;
    gr:hasMinValue 1
  ].

:SenderData a lss-usdl:KnowledgeResource;
	rdfs:label "Sender data";
	rdfs:comment "Name, address, etc. of sender".

:ReceiverData a lss-usdl:KnowledgeResource;
	rdfs:label "Receiver data";
	rdfs:comment "Name, address, etc. of receiver".


# Processes

:MailDelivery a lss-usdl:Process;
	rdfs:label "Mail delivery".


# Customer calls


:CustomerCalls a lss-usdl:CustomerInteraction;
	rdfs:label "Customer calls";
	lss-usdl:performedBy :Sender;
	lss-usdl:hasGoal :SendMail;
	lss-usdl:hasTime [
    a lss-usdl:Time;
    lss-usdl:hasTemporalEntity :CustomerCallsTime
  ];
	lss-usdl:hasLocation :SenderHome;
	lss-usdl:belongsToProcess :MailDelivery;
	lss-usdl:receivesResource :SenderData;
	lss-usdl:receivesResource :ReceiverData.


# Customer order is registered

:CustomerOrderIsRegistered a lss-usdl:BackstageInteraction;
	rdfs:label "Customer order is registered";
	lss-usdl:performedBy :CallCenterStaff;
	lss-usdl:hasGoal :SendMail;
	lss-usdl:hasTime [
    a lss-usdl:Time;
    lss-usdl:hasTemporalEntity :CustomerOrderIsRegisteredTime
  ];
	lss-usdl:hasLocation :CallCenter;
	lss-usdl:belongsToProcess :MailDelivery.


# Dispatch driver

:DispatchDriver a lss-usdl:SupportInteraction;
	rdfs:label "Dispatch driver";
	lss-usdl:performedBy :Driver;
	lss-usdl:hasGoal :SendMail;
	lss-usdl:hasTime [
    a lss-usdl:Time;
    lss-usdl:hasTemporalEntity :DispatchDriverTime
  ];
	lss-usdl:belongsToProcess :MailDelivery.

# Driver picks up packages

:DriverPicksUpPackages a lss-usdl:OnstageInteraction;
	rdfs:label "Driver picks up packages";
	lss-usdl:performedBy :Driver;
	lss-usdl:hasGoal :SendMail;
	lss-usdl:hasTime [
    a lss-usdl:Time;
    lss-usdl:hasTemporalEntity :DriverPicksUpPackagesTime
  ];
	lss-usdl:hasLocation :SenderHome;
	lss-usdl:belongsToProcess :MailDelivery.

# Customer delivers packages

:CustomerDeliversPackages a lss-usdl:CustomerInteraction;
	rdfs:label "Customer delivers packages";
	lss-usdl:performedBy :Sender;
	lss-usdl:hasGoal :SendMail;
	lss-usdl:hasTime [
    a lss-usdl:Time;
    lss-usdl:hasTemporalEntity :CustomerDeliversPackagesTime
  ];
	lss-usdl:hasLocation :SenderHome;
	lss-usdl:belongsToProcess :MailDelivery;
	lss-usdl:receivesResource :Mail.

# Airport receives and loads

:AirportReceivesAndLoads a lss-usdl:SupportInteraction;
	rdfs:label "Airport receives and loads";
	lss-usdl:performedBy :Driver;
	lss-usdl:hasGoal :SendMail;
	lss-usdl:hasTime [
    a lss-usdl:Time;
    lss-usdl:hasTemporalEntity :AirportReceivesAndLoads
  ];
	lss-usdl:hasLocation :SourceAirport;
	lss-usdl:belongsToProcess :MailDelivery.
	

# Fly to destination	

:FlyToSortCenter a lss-usdl:SupportInteraction;
	rdfs:label "Fly to sort center" .


# Sort packages	

:SortPackages a lss-usdl:SupportInteraction;
	rdfs:label "Sort packages" . 


# Load airplane	

:LoadAirplane a lss-usdl:SupportInteraction;
	rdfs:label "Load airplane" .


# Fly to destination

:FlyToDestination a lss-usdl:SupportInteraction;
	rdfs:label "Fly to destination";
	lss-usdl:hasGoal :sendMail;
	lss-usdl:hasTime [
    a lss-usdl:Time;
    lss-usdl:hasTemporalEntity :FlyToDestinationTime
  ];
	lss-usdl:belongsToProcess :MailDelivery;
	lss-usdl:hasAreaOfAction :SupportProcesses.


# Unload and sort on truck

:UnloadAndSort a lss-usdl:SupportInteraction;
	rdfs:label "Unload and sort";
	lss-usdl:performedBy :Driver;
	lss-usdl:hasGoal :SendMail;
	lss-usdl:hasTime [
    a lss-usdl:Time;
    lss-usdl:hasTemporalEntity :UnloadAndLoadOnTruckTime
  ];
	lss-usdl:hasLocation :DestinyAirport;
	lss-usdl:belongsToProcess :MailDelivery.


# Load on truck	

:LoadOnTruck a lss-usdl:SupportInteraction;
	rdfs:label "Load on truck" .


# Driver delivers packages

:DriverDeliversPackages a lss-usdl:OnstageInteraction;
	rdfs:label "Driver delivers packages";
	lss-usdl:performedBy :Driver;
	lss-usdl:hasGoal :ReceiveMail;
	lss-usdl:hasTime [
    a lss-usdl:Time;
    lss-usdl:hasTemporalEntity :DriverDeliversPackagesTime
  ];
	lss-usdl:hasLocation :ReceiverHome;
	lss-usdl:belongsToProcess :MailDelivery.


# Another customer receives packages

:AnotherCustomerReceivesPackage a lss-usdl:CustomerInteraction;
	rdfs:label "Another customer receives package";
	lss-usdl:performedBy :Receiver;
	lss-usdl:hasGoal :ReceiveMail;
	lss-usdl:hasTime [
    a lss-usdl:Time;
    lss-usdl:hasTemporalEntity :AnotherCustomerReceivesPackagesTime
  ];
	lss-usdl:hasLocation :ReceiverHome;
	lss-usdl:belongsToProcess :MailDelivery;
	lss-usdl:returnsResource :Mail.
